name: Build and Deploy Auth to GKE

on:
  push:
    branches:
      - main
    paths:
      - 'auth/**' 

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ticketing
  GKE_ZONE: europe-central2
  DEPLOYMENT_NAME: auth-depl
  IMAGE: auth 

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_KEY }}
      
    - name: Set Secret keys
      env:
        SECRET_KEY: JWT_KEY
        SECRET_VALUE: ${{ secrets.JWT_KEY }}
      run: |
        kubectl create secret generic jwt-secret --from-literal=${SECRET_KEY}=${SECRET_VALUE} -o yaml --dry-run=client | kubectl apply -f -


    # Build the Docker image
    - name: Build
      run: |-
        cd auth && docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          --build-arg SECRET_VALUE=${{ secrets.JWT_KEY }} \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"